name: Generate IPK Repository Files and Upload to S3

on:
  workflow_dispatch:
  push:
    paths:
      - '**.ipk'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path:
          - devices/ln6001/fw_v1.0.3.01/enterprise/curated
          - devices/ln6001/fw_v1.0.3.01/enterprise/supported
          - devices/ln6001/fw_v1.0.3.01/home/curated
          - devices/ln6001/fw_v1.0.3.01/home/supported
          - devices/ln6001/fw_v1.0.3.01/privacyui/curated
          - devices/ln6001/fw_v1.0.3.01/privacyui/supported
          - devices/ln6001/fw_v1.1.0.01/enterprise/curated
          - devices/ln6001/fw_v1.1.0.01/enterprise/supported
          - devices/ln6001/fw_v1.1.0.01/home/curated
          - devices/ln6001/fw_v1.1.0.01/home/supported
          - devices/ln6001/fw_v1.1.0.01/privacyui/curated
          - devices/ln6001/fw_v1.1.0.01/privacyui/supported
          - devices/ln6002/fw_v1.0.1.01/enterprise/curated
          - devices/ln6002/fw_v1.0.1.01/enterprise/supported
          - devices/ln6002/fw_v1.0.1.01/home/curated
          - devices/ln6002/fw_v1.0.1.01/home/supported
          - devices/ln6002/fw_v1.0.1.01/privacyui/curated
          - devices/ln6002/fw_v1.0.1.01/privacyui/supported

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Get names
      id: name
      run: |
        device=$(echo ${{ matrix.path }} | cut -d/ -f2)
        fw=$(echo ${{ matrix.path }} | cut -d/ -f3)
        flavor=$(echo ${{ matrix.path }} | cut -d/ -f4)
        category=$(echo ${{ matrix.path }} | cut -d/ -f5)
        date=$(date +'%Y-%m-%d')

        echo "device=$device"
        echo "fw=$fw"
        echo "flavor=$flavor"
        echo "category=$category"
        echo "date=$date"

        echo "device=${device}" >> $GITHUB_ENV
        echo "fw=${fw}" >> $GITHUB_ENV
        echo "flavor=${flavor}" >> $GITHUB_ENV
        echo "category=${category}" >> $GITHUB_ENV
        echo "date=${date}" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gzip tar coreutils zip awscli

    - name: Create necessary directories
      run: |
        mkdir -p ./output

    - name: Copy precompiled usign binary
      run: |
        cp ./usign/build/usign ./output/usign

    - name: Set execute permissions for usign
      run: |
        chmod +x ./output/usign

    - name: Copy precompiled IPKs
      run: |
        echo "Copying IPK files from ${{ matrix.path }} to ./output/"
        find ${{ matrix.path }} -type f -name '*.ipk' -exec cp {} ./output/ \;
        echo "IPK files in ./output/:"
        ls -l ./output/

    - name: Generate Packages file
      run: |
        chmod +x ./scripts/generate_packages.sh
        ./scripts/generate_packages.sh ${{ env.category }}

    - name: Compress Packages file
      run: |
        chmod +x ./scripts/compress_packages.sh
        ./scripts/compress_packages.sh

    - name: Generate Packages manifest
      run: |
        chmod +x ./scripts/generate_manifest.sh
        ./scripts/generate_manifest.sh

    - name: Sign Packages file
      env:
        USIGN_PRIVATE_KEY: ${{ secrets.USIGN_PRIVATE_KEY }}
      run: |
        chmod +x ./scripts/sign_packages.sh
        ./scripts/sign_packages.sh ./output/Packages ./output/Packages.sig "$USIGN_PRIVATE_KEY" ./output/usign

    - name: Upload individual artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.device }}-${{ env.fw }}-${{ env.flavor }}-${{ env.category }}--${{ env.date }}
        path: ./output/*

  upload-to-s3:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Organize and upload to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        for artifact in ./artifacts/*; do
          dest_path="s3://wrtrepo-out-test/${artifact##*/}"
          echo "Uploading $artifact to $dest_path"
          aws s3 cp "$artifact" "$dest_path" --recursive --sse AES256
        done

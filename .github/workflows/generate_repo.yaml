name: Generate IPK Repository Files

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gzip tar coreutils

    - name: Create necessary directories
      run: |
        mkdir -p ./repo/IPK_files
        mkdir -p ./repo/usign/build
        mkdir -p ./keys
        mkdir -p ./output

    - name: Copy precompiled usign binary
      run: |
        cp ./usign/build/usign ./repo/usign/build/usign

    - name: Set execute permissions for usign
      run: |
        chmod +x ./repo/usign/build/usign

    - name: Copy precompiled IPKs
      run: |
        cp ./IPK_files/* ./repo/IPK_files/

    - name: Debug private key
      run: |
        echo "Contents of the private key file:"
        cat ./keys/openWrtUsign.key

    - name: Generate Packages file
      run: |
        chmod +x ./scripts/generate_packages.sh
        ./scripts/generate_packages.sh

    - name: Compress Packages file
      run: |
        chmod +x ./scripts/compress_packages.sh
        ./scripts/compress_packages.sh

    - name: Generate Packages manifest
      run: |
        chmod +x ./scripts/generate_manifest.sh
        ./scripts/generate_manifest.sh

    - name: Sign Packages file
      env:
        USIGN_PRIVATE_KEY: ${{ secrets.USIGN_PRIVATE_KEY }}
      run: |
        chmod +x ./scripts/sign_packages.sh
        ./scripts/sign_packages.sh ./output/Packages ./output/Packages.sig "$USIGN_PRIVATE_KEY" ./repo/usign/build/usign

    - name: Debug output directory
      run: |
        echo "Contents of the output directory:"
        ls -l ./output
        echo "Contents of the Packages file:"
        cat ./output/Packages
        echo "Contents of the Packages.gz file:"
        gzip -d -c ./output/Packages.gz | cat
        echo "Contents of the Packages manifest file:"
        cat ./output/Packages.manifest

    - name: Upload generated files
      uses: actions/upload-artifact@v2
      with:
        name: repo-files
        path: ./output/
